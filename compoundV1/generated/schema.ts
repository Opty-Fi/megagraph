// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class CTokenData extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save CTokenData entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save CTokenData entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("CTokenData", id.toString(), this);
  }

  static load(id: string): CTokenData | null {
    return store.get("CTokenData", id) as CTokenData | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get blockNumber(): BigInt | null {
    let value = this.get("blockNumber");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockNumber(value: BigInt | null) {
    if (value === null) {
      this.unset("blockNumber");
    } else {
      this.set("blockNumber", Value.fromBigInt(value as BigInt));
    }
  }

  get blockTimestamp(): BigInt | null {
    let value = this.get("blockTimestamp");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set blockTimestamp(value: BigInt | null) {
    if (value === null) {
      this.unset("blockTimestamp");
    } else {
      this.set("blockTimestamp", Value.fromBigInt(value as BigInt));
    }
  }

  get cTokenSymbol(): string | null {
    let value = this.get("cTokenSymbol");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set cTokenSymbol(value: string | null) {
    if (value === null) {
      this.unset("cTokenSymbol");
    } else {
      this.set("cTokenSymbol", Value.fromString(value as string));
    }
  }

  get cTokenAddress(): string | null {
    let value = this.get("cTokenAddress");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set cTokenAddress(value: string | null) {
    if (value === null) {
      this.unset("cTokenAddress");
    } else {
      this.set("cTokenAddress", Value.fromString(value as string));
    }
  }

  get borrowRatePerBlock(): BigInt | null {
    let value = this.get("borrowRatePerBlock");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set borrowRatePerBlock(value: BigInt | null) {
    if (value === null) {
      this.unset("borrowRatePerBlock");
    } else {
      this.set("borrowRatePerBlock", Value.fromBigInt(value as BigInt));
    }
  }

  get supplyRatePerBlock(): BigInt | null {
    let value = this.get("supplyRatePerBlock");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set supplyRatePerBlock(value: BigInt | null) {
    if (value === null) {
      this.unset("supplyRatePerBlock");
    } else {
      this.set("supplyRatePerBlock", Value.fromBigInt(value as BigInt));
    }
  }

  get exchangeRate(): BigDecimal | null {
    let value = this.get("exchangeRate");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set exchangeRate(value: BigDecimal | null) {
    if (value === null) {
      this.unset("exchangeRate");
    } else {
      this.set("exchangeRate", Value.fromBigDecimal(value as BigDecimal));
    }
  }

  get totalCash(): BigDecimal | null {
    let value = this.get("totalCash");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set totalCash(value: BigDecimal | null) {
    if (value === null) {
      this.unset("totalCash");
    } else {
      this.set("totalCash", Value.fromBigDecimal(value as BigDecimal));
    }
  }

  get totalBorrows(): BigDecimal | null {
    let value = this.get("totalBorrows");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set totalBorrows(value: BigDecimal | null) {
    if (value === null) {
      this.unset("totalBorrows");
    } else {
      this.set("totalBorrows", Value.fromBigDecimal(value as BigDecimal));
    }
  }

  get totalSupply(): BigDecimal | null {
    let value = this.get("totalSupply");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set totalSupply(value: BigDecimal | null) {
    if (value === null) {
      this.unset("totalSupply");
    } else {
      this.set("totalSupply", Value.fromBigDecimal(value as BigDecimal));
    }
  }

  get totalReserves(): BigDecimal | null {
    let value = this.get("totalReserves");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set totalReserves(value: BigDecimal | null) {
    if (value === null) {
      this.unset("totalReserves");
    } else {
      this.set("totalReserves", Value.fromBigDecimal(value as BigDecimal));
    }
  }

  get borrowIndex(): BigDecimal | null {
    let value = this.get("borrowIndex");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigDecimal();
    }
  }

  set borrowIndex(value: BigDecimal | null) {
    if (value === null) {
      this.unset("borrowIndex");
    } else {
      this.set("borrowIndex", Value.fromBigDecimal(value as BigDecimal));
    }
  }
}
